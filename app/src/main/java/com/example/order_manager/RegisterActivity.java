package com.example.order_manager;

import android.content.Intent;
import android.os.Bundle;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;

import androidx.appcompat.app.AppCompatActivity;

import com.android.volley.Request;
import com.android.volley.toolbox.StringRequest;
import com.android.volley.toolbox.Volley;

import org.json.JSONException;
import org.json.JSONObject;

import java.util.HashMap;
import java.util.Map;
import android.util.Log;

public class RegisterActivity extends AppCompatActivity {

    private EditText nameEditText, emailEditText, passwordEditText, confirmPasswordEditText;
    private Button registerButton, exitButton, loginButton; // üîπ –¥–æ–±–∞–≤–∏–ª–∏ loginButton

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_register);

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≤—Å–µ—Ö –ø–æ–ª–µ–π
        nameEditText = findViewById(R.id.nameEditText);
        emailEditText = findViewById(R.id.emailEditText);
        passwordEditText = findViewById(R.id.passwordEditText);
        confirmPasswordEditText = findViewById(R.id.confirmPasswordEditText);
        registerButton = findViewById(R.id.registerButton);
        exitButton = findViewById(R.id.exitButton);
        loginButton = findViewById(R.id.loginButton); // üîπ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è

        registerButton.setOnClickListener(v -> registerUser());
        exitButton.setOnClickListener(v -> finish());

        // üîπ –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω –ª–æ–≥–∏–Ω–∞
        loginButton.setOnClickListener(v -> {
            Intent intent = new Intent(RegisterActivity.this, LoginActivity.class);
            startActivity(intent);
        });
    }

    private void registerUser() {
        // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏–∑ –≤—Å–µ—Ö –ø–æ–ª–µ–π
        String name = nameEditText.getText().toString().trim();
        String email = emailEditText.getText().toString().trim();
        String password = passwordEditText.getText().toString().trim();
        String confirmPassword = confirmPasswordEditText.getText().toString().trim();
        Log.d("REGISTER", "name=" + name + ", email=" + email + ", password=" + password + ", confirm=" + confirmPassword);

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –≤—Å–µ—Ö –ø–æ–ª–µ–π
        if (name.isEmpty() || email.isEmpty() || password.isEmpty() || confirmPassword.isEmpty()) {
            Toast.makeText(this, "–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è", Toast.LENGTH_SHORT).show();
            return;
        }

        // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è –ø–∞—Ä–æ–ª–µ–π
        if (!password.equals(confirmPassword)) {
            Toast.makeText(this, "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç", Toast.LENGTH_SHORT).show();
            return;
        }

        // –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–æ–ª–∏ (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–≤–æ—é –ª–æ–≥–∏–∫—É)
        String role = email.toLowerCase().contains("admin") ? "admin" : "client";
        String url = "http://192.168.1.4/order_manager/register.php";

        // –û—Ç–ø—Ä–∞–≤–∫–∞ POST-–∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        StringRequest stringRequest = new StringRequest(Request.Method.POST, url,
                response -> {
                    try {
                        JSONObject obj = new JSONObject(response);
                        if (obj.getBoolean("success")) {
                            // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º user_id —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                            int userId = obj.optInt("user_id", -1);
                            getSharedPreferences("myAppPrefs", MODE_PRIVATE)
                                    .edit()
                                    .putInt("user_id", userId)
                                    .putString("email", email) // –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤/–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
                                    .apply();
                            Log.d("REGISTER", "Saved user_id=" + userId);

                            Toast.makeText(this, "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞", Toast.LENGTH_SHORT).show();

                            // –ü–µ—Ä–µ—Ö–æ–¥ –≤ –Ω—É–∂–Ω—É—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–æ–ª–∏ (–∫–∞–∫ —É —Ç–µ–±—è –±—ã–ª–æ)
                            if (role.equals("admin")) {
                                startActivity(new Intent(this, EmployeeMainActivity.class));
                            } else {
                                startActivity(new Intent(this, ClientMainActivity.class));
                            }
                            finish();
                        } else {
                            // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–≤–æ—é –ª–æ–≥–∏–∫—É: –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                            Toast.makeText(this, obj.optString("message", "–û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏"), Toast.LENGTH_SHORT).show();
                        }
                    } catch (JSONException e) {
                        e.printStackTrace();
                        Toast.makeText(this, "–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞", Toast.LENGTH_SHORT).show();
                    }
                },
                error -> Toast.makeText(this, "–û—à–∏–±–∫–∞ —Å–µ—Ç–∏: " + error.getMessage(), Toast.LENGTH_SHORT).show()
        ) {
            @Override
            protected Map<String, String> getParams() {
                // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤—Å–µ—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
                Map<String, String> params = new HashMap<>();
                params.put("name", name);
                params.put("email", email);
                params.put("password", password);
                params.put("role", role);
                return params;
            }
        };

        Volley.newRequestQueue(this).add(stringRequest);
    }
}
